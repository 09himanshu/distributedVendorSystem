version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d orders_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vendor

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "80:80"
    depends_on:
      - postgres
    networks:
      - vendor
  
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin@123
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - vendor

  mock_vendor:
    build: ./mock_vendor
    environment:
      serverPort: 5001
      serverHost: 0.0.0.0
    ports:
      - "5001:5001"
    networks:
      - vendor
    
  vendor-sync:
    build: ./vendor-sync
    depends_on:
      - postgres
      - mock_vendor
    environment:
      DB_URL: postgres://postgres:password@postgres:5432/orders_db
      dialect: postgres
      logging: true
      connectTimeout: 10000
      poolMax: 5
      poolMin: 0
      poolAcquire: 30000
      poolIdle: 10000
    networks:
      - vendor

  order-api:
    build: ./order-api
    depends_on:
      - postgres
      - rabbitmq
    environment:
      DB_URL: postgres://postgres:password@postgres:5432/orders_db
      RABBITMQ_URL: amqp://admin:admin@123@rabbitmq:5672
      queueName: orderQueue
      dialect: postgres
      logging: true
      connectTimeout: 10000
      poolMax: 5
      poolMin: 0
      poolAcquire: 30000
      poolIdle: 10000
      serverPort: 5002
      serverHost: 0.0.0.0
    ports:
      - "5002:5002"
    networks:
      - vendor

  order-worker:
    build: ./order-worker
    depends_on:
      - postgres
      - rabbitmq
    environment:
      DB_URL: postgres://postgres:password@postgres:5432/orders_db
      RABBITMQ_URL: amqp://admin:admin@123@rabbitmq:5672
      queueName: orderQueue
      dialect: postgres
      logging: true
      connectTimeout: 10000
      poolMax: 5
      poolMin: 0
      poolAcquire: 30000
      poolIdle: 10000
    networks:
      - vendor

volumes:
  pgdata:

networks:
  vendor:
    driver: bridge